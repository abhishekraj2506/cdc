version: '3.8'
volumes:
  pg_data:
  zookeeper_data:
  zookeeper_logs:
  zookeeper_conf:
  kafka_data:
  kafka_config:

services:
  db:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: core_data
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/

  # adminer:
  #   container_name: adminer
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
     - zookeeper_data:/zookeeper/data
     - zookeeper_logs:/zookeeper/logs
     - zookeeper_conf:/zookeeper/conf
  
  kafka:
    container_name: kafka
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
      KAFKA_AUTO_CREATE_TOPICS: "true"
    volumes:
     - kafka_data:/kafka/data
     - kafka_config:/kafka/config
    ports:
    - 9092:9092
  
  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
     - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
     - SCHEMA_REGISTRY_HOST_NAME=schema-registry
     - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    depends_on: [zookeeper, kafka]
    ports:
    - 8888:8081

  restproxy:
    container_name: restproxy
    image: confluentinc/cp-kafka-rest
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"      
      KAFKA_REST_HOST_NAME: restproxy
      KAFKA_REST_DEBUG: "true"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
    ports:
      - 8082:8082
  
  # kafka-ui:
  #   container_name: kafka-ui
  #   image: landoop/kafka-connect-ui:latest
  #   ports:
  #     - 8000:8000
  #   links:
  #     - connect3
  #     - schema-registry
  #     - zookeeper
  #   environment:
  #   - CONNECT_URL=http://connect3:8083/
  
  # kafka-topic-ui:
  #   container_name: kafka-ui
  #   image: landoop/kafka-topics-ui
  #   # links:
  #   #   - connect3
  #   ports:
  #     - 8001:8000
  #   environment:
  #   - KAFKA_REST_PROXY_URL=http://restproxy:8082
  #   - PROXY=true

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "always"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka

  debezium:
    # image: debezium/connect:latest
    build:
      context: .
      dockerfile: Connector_Dockerfile
    container_name: debezium
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_GROUP_ID: 1
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
      CONNECT_REST_ADVERTISED_PORT: 8083
    depends_on: [kafka]
    ports:
      - 8083:8083



